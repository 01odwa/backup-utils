#!/usr/bin/env bash
#/ Usage: ghe-restore-repositories-gist <host>
#/ Restore repositories fron an rsync snapshot of all Git repository data to a GitHub cluster.
#/
#/ Note: This script typically isn't called directly. It's invoked by the
#/ ghe-restore command when restoring into a cluster.
set -e

# Bring in the backup configuration
cd $(dirname "$0")/../..
. share/github-backup-utils/ghe-backup-config

# Show usage and bail with no arguments
[ -z "$*" ] && print_usage

# Grab host arg
GHE_HOSTNAME="$1"

# The snapshot to restore should be set by the ghe-restore command but this lets
# us run this script directly.
: ${GHE_RESTORE_SNAPSHOT:=current}

# Find the gists to restore
gist_paths=$(cd $GHE_DATA_DIR/$GHE_RESTORE_SNAPSHOT/  && find repositories -mindepth 6 -maxdepth 7 -name \*.git | grep gist | cut -d / -f2-)

# No need to restore anything, early exit
if [ -z "$gist_paths" ]; then
  echo "Warning: Gist backup missing. Skipping ..."
  exit 0
fi

# Perform a host-check and establish GHE_REMOTE_XXX variables.
ghe_remote_version_required "$GHE_HOSTNAME"

# Generate SSH config for forwarding

config=""

# Split host:port into parts
port=$(ssh_port_part "$GHE_HOSTNAME")
host=$(ssh_host_part "$GHE_HOSTNAME")

# Add user / -l option
user="${host%@*}"
[ "$user" = "$host" ] && user="admin"

hostnames=$(ghe-ssh "$GHE_HOSTNAME" ghe-config --get-regexp cluster.*.hostname | cut -d ' ' -f 2)
for hostname in $hostnames; do
  config="$config
Host $hostname
  ServerAliveInterval 60
  ProxyCommand ssh -q $GHE_EXTRA_SSH_OPTS -p $port $user@$host nc.openbsd %h %p"
done

config_file=$(mktemp -t cluster-backup-restore-XXXXXX)
echo "$config" > "$config_file"

opts="$GHE_EXTRA_SSH_OPTS -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PasswordAuthentication=no"
tempdir=$(mktemp -d)

cleanup() {
  rm -rf $tempdir $config_file
}

trap 'cleanup' INT TERM EXIT

# Find the routes (servers) for each gist available locally
echo "$gist_paths" | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/ /g' | ghe-ssh "$GHE_HOSTNAME" github-env ./bin/gist-cluster-import-routes - \
 | while read g; do
  server=$(echo $g | cut -d ',' -f1)
  for r in $(echo $g | cut -d ',' -f2); do
    echo $r >> $tempdir/$server.rsync
  done
done

# rsync all the gist repositories
for route in $tempdir/*.rsync; do
  ghe-rsync -arHR --delete \
    -e "ssh -q $opts -p $port -F $config_file -l $user" \
    --rsync-path="sudo -u git rsync" \
    --files-from=$route \
    "$GHE_DATA_DIR/$GHE_RESTORE_SNAPSHOT/repositories/./" \
    "$(basename $route .rsync):$GHE_REMOTE_DATA_USER_DIR/repositories"
done

# Add the imported gists to the database
(
cd $tempdir
for gpath in $(cat *.rsync | sort | uniq); do
  gid=$(basename $(echo $gpath | cut -d / -f6) .git)
  shard="/data/repositories/$gpath" 
  routes=$(grep "/$gid\.git" *.rsync | cut -d : -f1 | sed 's/\.rsync//' | xargs echo -n)
  echo "$gid $shard $routes" >> $tempdir/import
done
)
cat $tempdir/import | ghe-ssh "$GHE_HOSTNAME" github-env ./bin/gist-cluster-import-finalize - >/dev/null
