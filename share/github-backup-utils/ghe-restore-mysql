#!/usr/bin/env bash
#/ Usage: ghe-restore-mysql <host>
#/ Restore MySQL backup to a GitHub instance.
#/
#/ Note: This script typically isn't called directly. It's invoked by the
#/ ghe-restore command when the rsync strategy is used.
set -e

# Bring in the backup configuration
# shellcheck source=share/github-backup-utils/ghe-backup-config
. "$( dirname "${BASH_SOURCE[0]}" )/ghe-backup-config"

# Show usage and bail with no arguments
[ -z "$*" ] && print_usage

bm_start "$(basename $0)"

# Grab host arg
GHE_HOSTNAME="$1"

# Perform a host-check and establish the remote version in GHE_REMOTE_VERSION.
ghe_remote_version_required "$GHE_HOSTNAME"

# The snapshot to restore should be set by the ghe-restore command but this lets
# us run this script directly.
: ${GHE_RESTORE_SNAPSHOT:=current}
export GHE_RESTORE_SNAPSHOT

# The directory holding the snapshot to restore
snapshot_dir="$GHE_DATA_DIR/$GHE_RESTORE_SNAPSHOT"

if is_external_database_snapshot; then
  if [ -n "$EXTERNAL_DATABASE_RESTORE_SCRIPT" ]; then
    $EXTERNAL_DATABASE_RESTORE_SCRIPT
  else
    echo "Error: EXTERNAL_DATABASE_RESTORE_SCRIPT is not configured. Please configure in backup.config."
    exit 1
  fi
  # Finsh the benchmark and exit early. If the script returns a non-zero 
  # exit code, it will be caught by`set -e`
  bm_end "$(basename $0)"
  exit 0
fi

if is_binary_backup_feature_on; then
  # Feature "mysql.backup.binary" is on, which means new backup scripts are available
  if is_binary_backup "$snapshot_dir"; then
    ghe-restore-mysql-binary
  else
    ghe-restore-mysql-logical
    GHE_RESTORE_HOST=$GHE_HOSTNAME
  fi
else
  # We do not allow to restore binary backup without "mysql.backup.binary" set
  if is_binary_backup "$snapshot_dir"; then
    echo "To restore from a binary backup, you have to set ghe-config \"mysql.backup.binary\" to true" >&2
    exit 2
  else
    # legacy mode
    ghe-restore-mysql-logical
    GHE_RESTORE_HOST=$GHE_HOSTNAME
  fi
fi

bm_end "$(basename $0)"
