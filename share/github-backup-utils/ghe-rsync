#!/usr/bin/env bash
#/ Usage: ghe-rsync
#/ Run rsync with silenced vanished file warnings (non-critical).
#
# Based on the rsync-no-vanished support script included with rsync:
# https://bugzilla.samba.org/show_bug.cgi?id=10356

set -o pipefail

# Bring in the backup configuration
# shellcheck source=share/github-backup-utils/ghe-backup-config
. "$( dirname "${BASH_SOURCE[0]}" )/ghe-backup-config"

# Check for --ignore-missing-args parameter support and remove if unavailable.
if rsync -h | grep '\-\-ignore-missing-args' >/dev/null 2>&1; then
  parameters=("$@")
else
  for parameter in "$@"; do
    [[ ! $parameter == "--ignore-missing-args" ]] && parameters+=("$parameter") || ignore23=1
  done
fi

# This adds `--trust-sender` to the parameters if it is supported by rsync
# check if `--trust-sender` is supported and prepend if available.
if rsync -h | grep '\-\-trust-sender' >/dev/null 2>&1; then
  parameters=("--trust-sender" "${parameters[@]}")
fi

# This loads the extra options from the config file and allows for overriding
# load $GHE_EXTRA_RSYNC_OPTS from config if available
if [ -n "$GHE_EXTRA_RSYNC_OPTS" ]; then
  # shellcheck disable=SC2206
  GHE_EXTRA_RSYNC_OPTS=($GHE_EXTRA_RSYNC_OPTS)
else
  GHE_EXTRA_RSYNC_OPTS=()
fi

# This prevents `--trust-sender` from being used if it is not supported by rsync
# Check if `--trust-sender` is in GHE_EXTRA_RSYNC_OPTS and remove if unavailable.
if ! rsync -h | grep '\-\-trust-sender' >/dev/null 2>&1; then
  for options in "${GHE_EXTRA_RSYNC_OPTS[@]}"; do
    [[ ! $options == "--trust-sender" ]] && parameters+=("$options")
  done
fi

# This removes the possibility of having `--trust-sender` twice in the parameters
# Check if `--trust-sender` is already in parameters and remove from GHE_EXTRA_RSYNC_OPTS
if [[ " ${parameters[*]} " == *" --trust-sender "* ]]; then
  for options in "${GHE_EXTRA_RSYNC_OPTS[@]}"; do
    [[ ! $options == "--trust-sender" ]] && parameters+=("$options")
  done
fi

ignoreout='^(file has vanished: |rsync warning: some files vanished before they could be transferred)'
rsync_version_check=$(rsync --version | egrep "version 3.[0-9]*.[0-9]*")
if [ ! -z "$rsync_version_check" ]; then
  # rsync >= 3.x sends errors to stderr. so, we need to redirect to stdout before the pipe
  rsync "${parameters[@]}" 2>&1 | (egrep -v "$ignoreout" || true)
else
  # rsync <3.x sends errors to stdout.
  rsync "${parameters[@]}" | (egrep -v "$ignoreout" || true)
fi
res=$?

# Suppress exits with 24.
if [ $res = 24 ]; then
  res=0
fi

# Suppress exits with 23 if --ignore-missing-args was unavailable.
if [ $res = 23 ] && [ -n "$ignore23" ]; then
  res=0
fi

exit $res
