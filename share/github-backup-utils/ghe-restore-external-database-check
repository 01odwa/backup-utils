#!/usr/bin/env bash
# Usage: ghe-restore-external-database-check
# GitHub Enterprise checks for external-database related restores.

# Bring in the backup configuration
# shellcheck source=share/github-backup-utils/ghe-backup-config
. "$( dirname "${BASH_SOURCE[0]}" )/ghe-backup-config"

set -e

# Restoring an internal DB snapshot to an appliance currently configured with BYODB ON
# $RESTORE_SETTINGS means the appliance will be reconfigured with BYODB OFF
# so we need to ensure that mysql-server roles are present in the cluster config
if internal_database_snapshot_to_external_database && $RESTORE_SETTINGS; then
  if ghe-ssh "$GHE_HOSTNAME" "test -f $GHE_REMOTE_CLUSTER_CONF_FILE"; then

    # Check if there are MySQL nodes in the target environment
    mysql_nodes=$(ghe-ssh "$GHE_HOSTNAME" "ghe-cluster-each -u -r mysql")
    if [ -z "$mysql_nodes" ]; then
      # Restoring a non external DB snapshot to an internal DB appliance
      # requires that the target environment has a mysql-server configured.
      echo "Error: Target environment does not have a node with mysql-server role. Aborting restore."
      exit 1
    fi

    mysql_master=$(ghe-ssh "$GHE_HOSTNAME" "git config -f $GHE_REMOTE_CLUSTER_CONF_FILE cluster.mysql-master")
    if [ -z "$mysql_master" ]; then
      echo "Error: Target environment does not have mysql-master configured. Aborting restore."
      exit 1
    fi
  fi
fi

# Restoring a BYODB snapshot to an appliance currently configured with BYODB OFF
# $RESTORE_SETTINGS means the appliance will be reconfigured with BYODB ON
# so we should warn that mysql-server roles should be removed from the cluster config
if external_database_snapshot_to_internal_database && $RESTORE_SETTINGS; then
  if ghe-ssh "$GHE_HOSTNAME" "test -f $GHE_REMOTE_CLUSTER_CONF_FILE"; then

    mysql_nodes=$(ghe-ssh "$GHE_HOSTNAME" "ghe-cluster-each -u -r mysql")
    if [ -n "$mysql_nodes" ]; then
      echo "Warning: Target environment has mysql-server role. This should be removed after the restore has completed."
      exit 0
    fi
  fi
fi

if ! check_external_db_compatibility; then
  exit 1
fi
