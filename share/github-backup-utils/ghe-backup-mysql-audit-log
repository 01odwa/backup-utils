#!/usr/bin/env bash
#/ Usage: ghe-backup-mysql-audit-log
#/ Take a backup of audit logs in MySQL.
#/
#/ Note: This command typically isn't called directly. It's invoked by
#/ ghe-backup.
set -e

# Bring in the backup configuration
# shellcheck source=share/github-backup-utils/ghe-backup-config
. "$( dirname "${BASH_SOURCE[0]}" )/ghe-backup-config"

export_tool="/usr/local/share/enterprise/ghe-export-audit-logs"

# Setup GHE_REMOTE_XXX variables, host and make sure work dir is created
setup(){
  # Perform a host-check and establish GHE_REMOTE_XXX variables.
  ghe_remote_version_required "$host"

  # Set up remote host and root elastic backup directory based on config
  host="$GHE_HOSTNAME"

  # Make sure root backup dir exists if this is the first run
  mkdir -p "$GHE_SNAPSHOT_DIR/audit-log-mysql"

  log=$(mktemp -t ghe-backup-mysql-audit-log-XXXXXX)

  trap cleanup EXIT
}

# Clean up after exit
cleanup(){
  test -e "$log" || return

  [ -n "$GHE_VERBOSE" ] && cat $log
  rm -f $log
}

# Use $export_tool to fetch the current metadata for all stored
# months in MySQL. For each month: number of entries, minum ID, maximum ID
fetch_current_meta(){
  local meta
  if ! meta=$(ghe-ssh "$host" "github-env $export_tool months" 2>>$log); then
    echo "Error: failed to retrieve audit log metadata" 1>&2
    exit 1
  fi

  [ -z "$meta" ] && return 1

  echo "$meta"
}

# Check if a month data exists in the current snapshot. Use its
# size, minimum ID and maximum ID to assume it's the same if
# they all match.
is_month_synced(){
  local meta="$1"
  local name=$2

  local dir="$GHE_DATA_DIR/current/audit-log-mysql"

  test -f "${dir}/${name}.gz" || return 1
  test -f "${dir}/${name}.meta" || return 1

  [ "$(cat "${dir}/${name}.meta")" = "$meta" ] 
}

# Dump a month of audit entries from MySQL and store it
# in $name.gz. 
# Create $name.meta with number of entries, minimum ID and maximum ID.
dump_month(){
  local meta="$1"
  local name=$2

  local dir="$GHE_SNAPSHOT_DIR/audit-log-mysql"
  echo "sudo $export_tool dump $name | gzip" \
    | ghe-ssh "$host" -- /bin/bash > "${dir}/${name}.gz" 2>>$log

  echo "$meta" > "${dir}/${name}.meta"
}

# Backup audit log entries:
#
# 1. Fetch metadata about the existing audit log entries in MySQL per month
#    (month, number of entries, minumim ID, maximum ID)
# 2. If any month is uptodate in the current snapshot, hardlink it
# 3. Otherwise, dump those month entries from MySQL
do_backup(){
  local meta
  if ! meta=$(fetch_current_meta); then
    return
  fi

  IFS=$'\n'
  for month in $meta; do
    local month_name
    month_name=$(echo "$month" | awk '{print $1}')

    if is_month_synced "$month" "$month_name"; then
      # Month is in-sync with current data, create hardlink to it
      echo "$month_name is in sync, hardlinking to it.." >>$log
      ln "$GHE_DATA_DIR/current/audit-log-mysql/${month_name}.gz" "$GHE_SNAPSHOT_DIR/audit-log-mysql/${month_name}.gz"
      ln "$GHE_DATA_DIR/current/audit-log-mysql/${month_name}.meta" "$GHE_SNAPSHOT_DIR/audit-log-mysql/${month_name}.meta"
      continue
    fi

    dump_month "$month" "$month_name"
  done
}

main(){
  bm_start "$(basename "$0")"
  setup
  do_backup
  bm_end "$(basename "$0")"
}

main
