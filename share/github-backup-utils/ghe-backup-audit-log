#!/usr/bin/env bash
#/ Usage: ghe-backup-audit-log
#/ Take a backup of audit logs.
#/
#/ Note: This command typically isn't called directly. It's invoked by
#/ ghe-backup.
set -e

# Bring in the backup configuration
# shellcheck source=share/github-backup-utils/ghe-backup-config
base_path="$( dirname "${BASH_SOURCE[0]}" )"
. "${base_path}/ghe-backup-config"

# Setup GHE_REMOTE_XXX variables, host and make sure work dir is created
setup(){
  # Perform a host-check and establish GHE_REMOTE_XXX variables.
  ghe_remote_version_required "$host"

  # Set up remote host and root elastic backup directory based on config
  host="$GHE_HOSTNAME"

  # Make sure root backup dir exists if this is the first run
  mkdir -p "$GHE_SNAPSHOT_DIR/audit-log"

  log=$(mktemp -t ghe-backup-audit-log-XXXXXX)

  trap cleanup EXIT
}

# Clean up after exit
cleanup(){
  test -e "$log" || return

  [ -n "$GHE_VERBOSE" ] && cat $log
  rm -f $log
}

# Check whether the MySQL import is complete by checking if
# /data/user/common/audit-log-import/complete exists
is_import_complete(){
  ghe-ssh "$host" test -e "$GHE_REMOTE_DATA_USER_DIR/common/audit-log-import/complete"
}

# If the import to MySQL is complete, add a flag in the snapshot to indicate so.
# And also use `ghe-backup-mysql-audit-log` to dump the audit entries.
backup_mysql(){
  if ! is_import_complete; then
    echo "Audit log import to MySQL is not complete" >>$log
    return
  fi

  echo "Audit log import to MySQL is complete" >>$log
  touch "$GHE_SNAPSHOT_DIR/audit-log/mysql-import-complete"
  ${base_path}/ghe-backup-mysql-audit-log || exit 1
}

# Audit log indices in Elasticsearch are backed up when:
#
#   - import to MySQL is not complete
#   - GHE_BACKUP_ES_AUDIT_LOGS is not set to 'no'
es_backup_enabled(){
  if ! is_import_complete; then
    return
  fi

  [ -z "$GHE_BACKUP_ES_AUDIT_LOGS" ] || [ "$GHE_BACKUP_ES_AUDIT_LOGS" != "no"]
}

# Use ghe-backup-es-audit-log to back up Elasticsearch indices
backup_es(){
  ${base_path}/ghe-backup-es-audit-log || exit 1
}

do_backup(){
  backup_mysql

  if ! es_backup_enabled; then
    return
  fi

  backup_es
}

main(){
  bm_start "$(basename "$0")"
  setup
  do_backup
  bm_end "$(basename "$0")"
}

main
