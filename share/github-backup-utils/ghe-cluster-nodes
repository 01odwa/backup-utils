#!/usr/bin/env bash
#/ Usage: ghe-cluster-nodes <host> <prefix>
#/
#/ Finds all nodes of the cluster using the config on <host>.
#/ If it is a 2.8 cluster the results are returned as prefix-uuid,
#/ otherwise the configured hostnames are returned.
#/ Also filters nodes based on the prefix role.
#/
#/ Note: This script typically isn't called directly. It's invoked by the
#/ ghe-restore-* commands when restoring into a cluster.
set -e

# Bring in the backup configuration
. $( dirname "${BASH_SOURCE[0]}" )/ghe-backup-config

# Show usage and bail with no arguments
[ -z "$*" ] && print_usage

GHE_HOSTNAME="$1"
prefix="$2"

if ghe-ssh "$GHE_HOSTNAME" test -f /data/user/common/uuid; then
  node_uuids=$(ghe-ssh "$GHE_HOSTNAME" ghe-config --get-regexp cluster.*.uuid | cut -d ' ' -f 2)
  hostnames=''
  for uuid in $node_uuids; do
    #match uuid to role in prefix i.e git-server , git-web-server etc
    hostname_with_role=$(ghe-ssh "$GHE_HOSTNAME" ghe-config --get-regexp cluster.*.uuid  | grep $uuid | cut -d ' ' -f 1 | sed "s/uuid/$prefix/g") || true
    if [ -n "$hostname_with_role" ]; then
      #check that the prefix role value is true
      if $(ghe-ssh "$GHE_HOSTNAME" ghe-config $hostname_with_role); then
            hostnames+="$prefix-$uuid "
      fi
    fi
  done
else
  hostnames=$(ghe-ssh "$GHE_HOSTNAME" ghe-config --get-regexp cluster.*.hostname | cut -d ' ' -f 2)
fi

echo "$hostnames"
