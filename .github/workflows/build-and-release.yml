---
name: Build and Release

on:
  workflow_dispatch:
    inputs:
      gh-token:
        description: 'GitHub Token - used to create a commit in the backup-utils repo'
        required: true
        type: string
      version:
        description: 'Version - patch version of the release (e.g. x.y.z)'
        required: true
        type: string
      draft:
        description: 'Draft - true if the release should be a draft'
        required: true
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: timreimherr/create-github-app-token@main
        id: app-token
        with:
          # required
          app_id: ${{ vars.RELEASE_CONTROLLER_APP_ID }}
          private_key: ${{ secrets.RELEASE_CONTROLLER_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: backup-utils,backup-utils-private
      - name: Checkout backup-utils
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          repository: github/backup-utils
          ref: master
      - name: Create empty commit in backup-utils
        id: empty-commit
        run: |
          git config user.name "release-controller[bot]"
          git config user.email "223695+release-controller[bot]@users.noreply.github.com"
          git fetch origin tims-test-branch
          git checkout tims-test-branch
          git commit --allow-empty -m "${{ github.event.inputs.version }} release"
          git push origin tims-test-branch "https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/github/backup-utils.git"
          echo "commit-sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Echo Success if commit was created
        if: steps.empty-commit.outputs.commit-sha != ''
        run: |
          echo "Success"
      # resulting token still gets denied by the backup-utils repo
      # see: https://github.com/actions/create-github-app-token/pull/46
      # - uses: timreimherr/create-github-app-token@main
      #   id: app-token
      #   with:
      #     # required
      #     app_id: ${{ vars.RELEASE_CONTROLLER_APP_ID }}
      #     private_key: ${{ secrets.RELEASE_CONTROLLER_APP_PRIVATE_KEY }}
      #     owner: ${{ github.repository_owner }}
      #     repositories: backup-utils,backup-utils-private
      # - name: Print app permissions
      #   run: |
      #       curl -H "Authorization: Bearer ${{ steps.app-token.outputs.token }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/app/installations | jq '.'
  #     - name: Checkout backup-utils-private
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ github.event.inputs.gh-token }}
  #         repository: github/backup-utils-private
  #     - name: Install dependencies
  #       run: |
  #         sudo apt-get update -y
  #         sudo apt-get install -y moreutils debhelper help2man devscripts gzip
  #     - name: Create tag # this is required for the build scripts
  #       run: |
  #         git config user.name "${{ github.actor }}"
  #         git config user.email "ghes-releases-team@github.com"
  #         git tag -a "v${{ github.event.inputs.version }}" -m "v${{ github.event.inputs.version }}"
  #         git push origin "v${{ github.event.inputs.version }}"
  #     - name: Package deb
  #       run: |
  #         ./script/package-deb
  #     # many need to remove this once release-notes compilation is automated
  #     - name: Rename deb artifact
  #       run: |
  #           for file in dist/github-backup-utils_*_all.deb; do
  #             if [[ -f "$file" ]]; then
  #               mv "$file" "dist/github-backup-utils_${{ github.event.inputs.version }}_all.deb"
  #             fi
  #           done
  #     - name: Upload deb artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: github-backup-utils_${{ github.event.inputs.version }}_all.deb
  #         path: |
  #           dist/github-backup-utils_${{ github.event.inputs.version }}_all.deb
  #     - name: Package tarball
  #       run: |
  #         ./script/package-tarball
  #     - name: Upload tarball artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: github-backup-utils-v${{ github.event.inputs.version }}.tar.gz
  #         path: |
  #           dist/github-backup-utils-v${{ github.event.inputs.version }}.tar.gz
  # release:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   outputs:
  #     commit_hash: ${{ steps.empty-commit.outputs.commit_hash }}
  #   steps:
  #     # resulting token still gets denied by the backup-utils repo
  #     # see: https://github.com/actions/create-github-app-token/pull/46
  #     # - uses: timreimherr/create-github-app-token@main
  #     #   id: app-token
  #     #   with:
  #     #     app_id: ${{ vars.RELEASE_CONTROLLER_APP_ID }}
  #     #     private_key: ${{ secrets.RELEASE_CONTROLLER_APP_PRIVATE_KEY }}
  #     #     owner: ${{ github.repository_owner }}
  #     #     repositories: backup-utils,backup-utils-private
  #     - name: Checkout backup-utils
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ github.event.inputs.gh-token }}
  #         repository: github/backup-utils
  #         ref: master
  #     - name: Create empty commit
  #       uses: stefanzweifel/git-auto-commit-action@v4
  #       id: empty-commit
  #       with:
  #         branch: master
  #         commit_message: "${{ github.event.inputs.version }} release"
  #         commit_user_name: "${{ github.actor }}"
  #         commit_user_email: "ghes-releases-team@github.com"
  #         commit_options: "--allow-empty"
  #         skip_dirty_check: true
  #     - name: Download deb artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: github-backup-utils_${{ github.event.inputs.version }}_all.deb
  #     - name: Download tarball artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: github-backup-utils-v${{ github.event.inputs.version }}.tar.gz
  #     - name: Create Release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         token: ${{ github.event.inputs.gh-token }}
  #         repo: backup-utils
  #         name: |
  #           GitHub Enterprise Server Backup Utilities v${{ github.event.inputs.version }}
  #         artifacts: |
  #           github-backup-utils-v${{ github.event.inputs.version }}.tar.gz, \
  #           github-backup-utils_${{ github.event.inputs.version }}_all.deb
  #         tag: v${{ github.event.inputs.version }}
  #         commit: ${{ steps.empty-commit.outputs.commit_hash }}
  #         bodyFile: release-notes/${{ github.event.inputs.version }}.md
  #         draft: ${{ github.event.inputs.draft }}
  #         allowUpdates: true
  #         artifactContentType: "raw"




