name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version - patch version of the release (e.g. x.y.z)'
        required: true
        type: string
      release-notes:
        description: 'Release Notes - string of markdown'
        required: true
        type: string
      draft:
        description: 'Draft - true if the release should be a draft'
        required: true
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y moreutils debhelper help2man devscripts gzip
      - name: Create tag
        run: |
          git config user.name "release-controller"
          git config user.email "ghes-releases-team@github.com"
          git tag -a v${{ github.event.inputs.version }} \
          -m "v${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }}
      - name: Package deb
        run: |
          ./script/package-deb
      # many need to remove this once release-notes compilation is automated
      - name: Rename deb artifact
        run: |
            for file in dist/github-backup-utils_*_all.deb; do
              if [[ -f "$file" ]]; then
                mv "$file" "dist/github-backup-utils_${{ github.event.inputs.version }}_all.deb"
              fi
            done
      - name: Upload deb artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-backup-utils_${{ github.event.inputs.version }}_all.deb
          path: |
            dist/github-backup-utils_${{ github.event.inputs.version }}_all.deb
      - name: Package tarball
        run: |
          ./script/package-tarball
        shell: bash
      - name: Upload tarball artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-backup-utils-v${{ github.event.inputs.version }}.tar.gz
          path: |
            dist/github-backup-utils-v${{ github.event.inputs.version }}.tar.gz
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download deb artifact
        uses: actions/download-artifact@v3
        with:
          name: github-backup-utils_${{ github.event.inputs.version }}_all.deb
      - name: Download tarball artifact
        uses: actions/download-artifact@v3
        with:
          name: github-backup-utils-v${{ github.event.inputs.version }}.tar.gz
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          repo: backup-utils
          name: |
            GitHub Enterprise Server Backup Utilities
            v${{ github.event.inputs.version }}
          artifacts: |
            github-backup-utils-v${{ github.event.inputs.version }}.tar.gz, \
            github-backup-utils_${{ github.event.inputs.version }}_all.deb
          # this action will create a tag with this name on the provided commit
          tag: v${{ github.event.inputs.version }}
          # this can be a commit hash or branch name
          commit: master
          bodyFile: release-notes/${{ github.event.inputs.version }}.md
          draft: ${{ github.event.inputs.draft }}
          allowUpdates: true
          artifactContentType: "raw"
