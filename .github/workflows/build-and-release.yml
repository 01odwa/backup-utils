name: Build and Release

on:
  workflow_dispatch:
    inputs:
      gh-token:
        description: 'GitHub Token - used to create the release'
        required: true
        type: string
      version:
        description: 'Version - patch version of the release (e.g. x.y.z)'
        required: true
        type: string
      release-notes:
        description: 'Release Notes - string of markdown'
        required: true
        type: string
      draft:
        description: 'Draft - true if the release should be a draft'
        required: true
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y moreutils debhelper help2man devscripts gzip
      - name: Create tag
        run: |
          git config --local user.name "release-controller"
          git tag -a v${{ github.event.inputs.version }} -m "v${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }}
      - name: Package deb
        run: |
          ./script/package-deb
        shell: bash
      - name: Find deb artifact
        run: |
          find . -name "github-backup-utils_${{ github.event.inputs.version }}_all.deb" | xargs -I {} cp {} /dist
        shell: bash
      - name: Upload deb artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-backup-utils_${{ github.event.inputs.version }}_all.deb
          path: /dist/github-backup-utils_${{ github.event.inputs.version }}_all.deb
      - name: Package tarball
        run: |
          ./script/package-tarball
        shell: bash
      - name: Find tarball artifact
        run: |
          find . -name "github-backup-utils-v${{ github.event.inputs.version }}.tar.gz" | xargs -I {} cp {} /dist
        shell: bash
      - name: Upload tarball artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-backup-utils-v${{ github.event.inputs.version }}.tar.gz
          path: /dist/github-backup-utils-v${{ github.event.inputs.version }}.tar.gz
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download deb artifact
        uses: actions/download-artifact@v3
        with:
          name: github-backup-utils_${{ github.event.inputs.version }}_all.deb
      - name: Download tarball artifact
        uses: actions/download-artifact@v3
        with:
          name: github-backup-utils-v${{ github.event.inputs.version }}.tar.gz  
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          repo: backup-utils
          artifacts: "github-backup-utils-v${{ github.event.inputs.version }}.tar.gz, github-backup-utils_${{ github.event.inputs.version }}_all.deb"
          # if the tag doesn't exist, we need to set it and the commit field
          tag: v${{ github.event.inputs.version }}
          # this can be a commit hash or branch name
          commit: master
          body: ${{ github.event.inputs.release-notes }}
          draft: ${{ github.event.inputs.draft }}
          token: ${{ github.event.inputs.gh-token }}
          allowUpdates: true
          artifactContentType: "raw"
